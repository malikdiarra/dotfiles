#package definition
snippet setup
	#!/usr/bin/env python

	from setuptools import setup, find_packages

	setup(name="${1:package_name}",
	      version="0.1",
	      description="${2:description}",
	      author="Malik Diarra",
	      author_email="malik.diarra@gmail.com",
	      packages=find_packages(), # other option is ['package_name']
	      url="http://www.mbzdr.com",
	      license="BSD",
	      classifiers = ['Development Status :: 4 - Beta', ],
	      install_requires = []) # ["some_package>='1.3.4','other_package=1,>=2,!=2.1']
snippet djAdmin
	class ${1:ModelName}Admin(admin.ModelAdmin):
		fields = (${2:fields_list})
		exlude = (${3:excluded_fields})

	admin.site.register($1, $1Admin)
snippet djForm
	class ${1:ModelName}Form(forms.ModelForm):

		class Meta:
			model = $1
			exclude = (${2:exluded_fields})
			fields = (${3:fields_list})
snippet djModel
	class ${1:ModelName}(models.Model):
		name = models.CharField(max_length=200)
		slug = models.SlugField()

		class Meta:
			ordering = ['name']

		def __unicode__(self):
			return u'%s' % self.name

		def save(self, *args, **kwargs):
			if not self.slug:
				self.slug = slugify(self.name)
			super($1, self).save(*args, **kwargs)

		@models.permalink
		def get_absolute_url(self,):
			return ('detail_view_name', (), {"slug": self.slug})
snippet djUrl
	admin.autodiscover()

	urlpatterns = patterns(
		'',
		url(r'^$', "path.to.the.view", name="home"),
		url(r'^video/', include('video.urls')),
		url("^actor/(?P<slug>[\w-]+)/delete/$", DeletePerson.as_view(),
				name="person_delete"),
		url(r'^admin/', include(admin.site.urls)),
		)
	if settings.DEBUG:
		urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
		urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
snippet DetailClass
	class ${1:model}Detail(DetailView):
		queryset = $1.objects.all()
		template_name = "${2:lower_case_class}/$2_detail.html"
		context_object_name = "$2"
		model = $1
snippet ListClass
	class ${1:model}List(ListView):
		queryset = $1.objects.order_by("fullname")
		template_name = "${2:lower_case_class}/$2_list.html"
		context_object_name = "$2s"
		model = $1
		paginate_by = ${3:20}
snippet CreateClass
	class Create${1:Model}(CreateView):
		model = $1
		fields = [${2:fields}]
snippet UpdateClass
	class Update${1:model}(UpdateView):
		model = $1
		fields = [${2:fields}]
snippet DeleteClass
	class Delete${1:model}(DeleteView):
		model = $1
		success_url = reverse_lazy(${2:url})
snippet dj_detail_view
	def detail_${1:model}(request, ${2:pk}):
		$1 = ${3:ModelClass}.objects.get($2 = $2)
		return render_to_response("${4:template_path}", {"$1" : $1})
snippet dj_add
	def add_${1:foo}(request, template_path = "${2:template.html}"):
		if request.method == "POST":
			form = ${3:FooForm}(request.POST)
			$1 = form.save()
			if( 'next' in request.POST):
				n = request.POST["next"]
			else:
				n = $1.get_absolute_url()
			return HttpResponseRedirect(n)
		else:
			c = {}
			c.update(csrf(request))
			form = $3()
			c["form"] = form
		return render_to_response(template_path, c)
snippet dj_mod
	def modify_${1:object}(request, ${2:id}, template_path = "${3:template.html}"):
		$1 = ${4:ObjectClass}.objects.get($2 = $2)
		if request.method == "POST":
			if "modify" in request.POST:
				form = ${5:ObjectForm}(request.POST, instance = $1)
				form.save()
				if('next' in request.POST):
					n = request.POST["next"]
				else:
					n = $1.get_absolute_url()
				return HttpResponseRedirect(n)
			elif "delete" in request.POST:
				$1.delete()
				return HttpResponseRedirect(request.POST["next"])
		c = {}
		c.update(csrf(request))
		form = $5(instance = $1)
		c["form"] = form
		return render_to_response(template_path, c)
